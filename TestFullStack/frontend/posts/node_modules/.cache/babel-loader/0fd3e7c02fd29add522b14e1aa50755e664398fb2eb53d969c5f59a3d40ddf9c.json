{"ast":null,"code":"import { CHANGE_AUTH } from \"./actions\";\nimport { combineReducers, createStore } from \"redux\";\nimport { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  isAuthenticated: true\n};\nexport const reducer = createSlice({\n  name: \"root\",\n  initialState,\n  reducers: {\n    changeAuth: (state, action) => {}\n  }\n});\nexport const reducers = (state = initialState, action) => {\n  switch (action.type) {\n    case CHANGE_AUTH:\n      return {\n        ...state,\n        isAuthenticated: !!action.payload.isAuth\n      };\n    default:\n      return state;\n  }\n};","map":{"version":3,"names":["CHANGE_AUTH","combineReducers","createStore","createSlice","initialState","isAuthenticated","reducer","name","reducers","changeAuth","state","action","type","payload","isAuth"],"sources":["C:/Oleg/programing/TestFullStack/frontend/posts/src/store/reducers.js"],"sourcesContent":["import {CHANGE_AUTH} from \"./actions\";\r\nimport {combineReducers, createStore} from \"redux\";\r\nimport {createSlice} from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n    isAuthenticated: true,\r\n}\r\nexport const reducer = createSlice({\r\n    name: \"root\",\r\n    initialState,\r\n    reducers: {\r\n        changeAuth: (state, action) => {\r\n            \r\n        }\r\n    }\r\n})\r\nexport const reducers = (state = initialState, action) =>{\r\n    switch(action.type){\r\n        case CHANGE_AUTH:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: !!action.payload.isAuth\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}"],"mappings":"AAAA,SAAQA,WAAW,QAAO,WAAW;AACrC,SAAQC,eAAe,EAAEC,WAAW,QAAO,OAAO;AAClD,SAAQC,WAAW,QAAO,kBAAkB;AAE5C,MAAMC,YAAY,GAAG;EACjBC,eAAe,EAAE;AACrB,CAAC;AACD,OAAO,MAAMC,OAAO,GAAGH,WAAW,CAAC;EAC/BI,IAAI,EAAE,MAAM;EACZH,YAAY;EACZI,QAAQ,EAAE;IACNC,UAAU,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK,CAE/B;EACJ;AACJ,CAAC,CAAC;AACF,OAAO,MAAMH,QAAQ,GAAGA,CAACE,KAAK,GAAGN,YAAY,EAAEO,MAAM,KAAI;EACrD,QAAOA,MAAM,CAACC,IAAI;IACd,KAAKZ,WAAW;MACZ,OAAO;QACH,GAAGU,KAAK;QACRL,eAAe,EAAE,CAAC,CAACM,MAAM,CAACE,OAAO,CAACC;MACtC,CAAC;IACL;MACI,OAAOJ,KAAK;EACpB;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}