{"ast":null,"code":"var _jsxFileName = \"C:\\\\Oleg\\\\programing\\\\TestFullStack\\\\frontend\\\\posts\\\\src\\\\components\\\\Router.jsx\";\nimport React from 'react';\nimport { Route, Routes } from \"react-router-dom\";\nimport { authRoutes, publicRoutes } from \"../routes\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Router = () => {\n  const isAuth = true;\n  return /*#__PURE__*/_jsxDEV(Routes, {\n    children: [isAuth && authRoutes.map(({\n      path,\n      component\n    }) => /*#__PURE__*/_jsxDEV(Route, {\n      path: path,\n      element: component,\n      exact: true\n    }, path, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 17\n    }, this)), publicRoutes.map(({\n      path,\n      component\n    }) => /*#__PURE__*/_jsxDEV(Route, {\n      path: path,\n      element: component,\n      exact: true\n    }, path, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this);\n};\n_c = Router;\nexport default Router;\nvar _c;\n$RefreshReg$(_c, \"Router\");","map":{"version":3,"names":["React","Route","Routes","authRoutes","publicRoutes","jsxDEV","_jsxDEV","Router","isAuth","children","map","path","component","element","exact","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Oleg/programing/TestFullStack/frontend/posts/src/components/Router.jsx"],"sourcesContent":["import React from 'react';\r\nimport {Route, Routes} from \"react-router-dom\";\r\nimport {authRoutes, publicRoutes} from \"../routes\";\r\n\r\nconst Router = () => {\r\n    const isAuth = true\r\n    return (\r\n        <Routes>\r\n            {isAuth && authRoutes.map(({path, component}) => (\r\n                <Route key={path} path={path} element={component} exact/>\r\n            ))}\r\n            {publicRoutes.map(({path, component}) => (\r\n                <Route key={path} path={path} element={component} exact/>\r\n            ))}\r\n        </Routes>\r\n    );\r\n};\r\n\r\nexport default Router;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAQC,KAAK,EAAEC,MAAM,QAAO,kBAAkB;AAC9C,SAAQC,UAAU,EAAEC,YAAY,QAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,MAAM,GAAGA,CAAA,KAAM;EACjB,MAAMC,MAAM,GAAG,IAAI;EACnB,oBACIF,OAAA,CAACJ,MAAM;IAAAO,QAAA,GACFD,MAAM,IAAIL,UAAU,CAACO,GAAG,CAAC,CAAC;MAACC,IAAI;MAAEC;IAAS,CAAC,kBACxCN,OAAA,CAACL,KAAK;MAAYU,IAAI,EAAEA,IAAK;MAACE,OAAO,EAAED,SAAU;MAACE,KAAK;IAAA,GAA3CH,IAAI;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAwC,CAC3D,CAAC,EACDd,YAAY,CAACM,GAAG,CAAC,CAAC;MAACC,IAAI;MAAEC;IAAS,CAAC,kBAChCN,OAAA,CAACL,KAAK;MAAYU,IAAI,EAAEA,IAAK;MAACE,OAAO,EAAED,SAAU;MAACE,KAAK;IAAA,GAA3CH,IAAI;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAwC,CAC3D,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEjB,CAAC;AAACC,EAAA,GAZIZ,MAAM;AAcZ,eAAeA,MAAM;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}