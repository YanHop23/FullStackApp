{"ast":null,"code":"var _jsxFileName = \"C:\\\\Oleg\\\\programing\\\\TestFullStack\\\\frontend\\\\posts\\\\src\\\\components\\\\Router.jsx\";\nimport React from 'react';\nimport { Route, Routes } from \"react-router-dom\";\nimport { authRoutes, publicRoutes } from \"../routes\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Router = () => {\n  const isAuth = true;\n  console.log(\"isAuth\");\n  return /*#__PURE__*/_jsxDEV(Routes, {\n    children: [isAuth && authRoutes.map(({\n      path,\n      component\n    }) => /*#__PURE__*/_jsxDEV(Route, {\n      path: path,\n      component: component,\n      exact: true\n    }, path, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 17\n    }, this)), publicRoutes.map(({\n      path,\n      component\n    }) => /*#__PURE__*/_jsxDEV(Route, {\n      path: path,\n      component: component,\n      exact: true\n    }, path, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }, this);\n};\n_c = Router;\nexport default Router;\nvar _c;\n$RefreshReg$(_c, \"Router\");","map":{"version":3,"names":["React","Route","Routes","authRoutes","publicRoutes","jsxDEV","_jsxDEV","Router","isAuth","console","log","children","map","path","component","exact","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Oleg/programing/TestFullStack/frontend/posts/src/components/Router.jsx"],"sourcesContent":["import React from 'react';\r\nimport {Route, Routes} from \"react-router-dom\";\r\nimport {authRoutes, publicRoutes} from \"../routes\";\r\n\r\nconst Router = () => {\r\n    const isAuth = true\r\n    console.log(\"isAuth\");\r\n    return (\r\n        <Routes>\r\n            {isAuth && authRoutes.map(({path, component}) => (\r\n                <Route key={path} path={path} component={component} exact/>\r\n            ))}\r\n            {publicRoutes.map(({path, component}) => (\r\n                <Route key={path} path={path} component={component} exact/>\r\n            ))}\r\n        </Routes>\r\n    );\r\n};\r\n\r\nexport default Router;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAQC,KAAK,EAAEC,MAAM,QAAO,kBAAkB;AAC9C,SAAQC,UAAU,EAAEC,YAAY,QAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,MAAM,GAAGA,CAAA,KAAM;EACjB,MAAMC,MAAM,GAAG,IAAI;EACnBC,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;EACrB,oBACIJ,OAAA,CAACJ,MAAM;IAAAS,QAAA,GACFH,MAAM,IAAIL,UAAU,CAACS,GAAG,CAAC,CAAC;MAACC,IAAI;MAAEC;IAAS,CAAC,kBACxCR,OAAA,CAACL,KAAK;MAAYY,IAAI,EAAEA,IAAK;MAACC,SAAS,EAAEA,SAAU;MAACC,KAAK;IAAA,GAA7CF,IAAI;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAA0C,CAC7D,CAAC,EACDf,YAAY,CAACQ,GAAG,CAAC,CAAC;MAACC,IAAI;MAAEC;IAAS,CAAC,kBAChCR,OAAA,CAACL,KAAK;MAAYY,IAAI,EAAEA,IAAK;MAACC,SAAS,EAAEA,SAAU;MAACC,KAAK;IAAA,GAA7CF,IAAI;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAA0C,CAC7D,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEjB,CAAC;AAACC,EAAA,GAbIb,MAAM;AAeZ,eAAeA,MAAM;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}