{"ast":null,"code":"var _jsxFileName = \"C:\\\\Oleg\\\\programing\\\\TestFullStack\\\\frontend\\\\posts\\\\src\\\\components\\\\Router.jsx\";\nimport React from 'react';\nimport { Navigate, Route, Routes } from \"react-router-dom\";\nimport { authRoutes, publicRoutes } from \"../routes\";\nimport { POSTS_ROUTE } from \"../utils/consts\";\nimport { useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Router = () => {\n  // const isAuth = useSelector(state => state.isAuthenticated);\n  return /*#__PURE__*/_jsxDEV(Routes, {\n    children: [isAuth && authRoutes.map(({\n      path,\n      element\n    }) => /*#__PURE__*/_jsxDEV(Route, {\n      path: path,\n      element: element\n    }, path, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 17\n    }, this)), publicRoutes.map(({\n      path,\n      element\n    }) => /*#__PURE__*/_jsxDEV(Route, {\n      path: path,\n      element: element,\n      exact: true\n    }, path, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"*\",\n      element: /*#__PURE__*/_jsxDEV(Navigate, {\n        to: POSTS_ROUTE,\n        replace: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 26\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, this);\n};\n_c = Router;\nexport default Router;\nvar _c;\n$RefreshReg$(_c, \"Router\");","map":{"version":3,"names":["React","Navigate","Route","Routes","authRoutes","publicRoutes","POSTS_ROUTE","useSelector","jsxDEV","_jsxDEV","Router","children","isAuth","map","path","element","fileName","_jsxFileName","lineNumber","columnNumber","exact","to","replace","_c","$RefreshReg$"],"sources":["C:/Oleg/programing/TestFullStack/frontend/posts/src/components/Router.jsx"],"sourcesContent":["import React from 'react';\r\nimport {Navigate, Route, Routes} from \"react-router-dom\";\r\nimport {authRoutes, publicRoutes} from \"../routes\";\r\nimport {POSTS_ROUTE} from \"../utils/consts\";\r\nimport {useSelector} from \"react-redux\";\r\n\r\n\r\nconst Router = () => {\r\n    // const isAuth = useSelector(state => state.isAuthenticated);\r\n    return (\r\n        <Routes>\r\n            {isAuth && authRoutes.map(({path, element}) => (\r\n                <Route key={path} path={path} element={element}/>\r\n            ))}\r\n            {publicRoutes.map(({path, element}) => (\r\n                <Route key={path} path={path} element={element} exact/>\r\n            ))}\r\n            <Route\r\n                path=\"*\"\r\n                element={<Navigate to={POSTS_ROUTE} replace={true} />}\r\n            />\r\n        </Routes>\r\n    );\r\n};\r\n\r\nexport default Router;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAQC,QAAQ,EAAEC,KAAK,EAAEC,MAAM,QAAO,kBAAkB;AACxD,SAAQC,UAAU,EAAEC,YAAY,QAAO,WAAW;AAClD,SAAQC,WAAW,QAAO,iBAAiB;AAC3C,SAAQC,WAAW,QAAO,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGxC,MAAMC,MAAM,GAAGA,CAAA,KAAM;EACjB;EACA,oBACID,OAAA,CAACN,MAAM;IAAAQ,QAAA,GACFC,MAAM,IAAIR,UAAU,CAACS,GAAG,CAAC,CAAC;MAACC,IAAI;MAAEC;IAAO,CAAC,kBACtCN,OAAA,CAACP,KAAK;MAAYY,IAAI,EAAEA,IAAK;MAACC,OAAO,EAAEA;IAAQ,GAAnCD,IAAI;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAgC,CACnD,CAAC,EACDd,YAAY,CAACQ,GAAG,CAAC,CAAC;MAACC,IAAI;MAAEC;IAAO,CAAC,kBAC9BN,OAAA,CAACP,KAAK;MAAYY,IAAI,EAAEA,IAAK;MAACC,OAAO,EAAEA,OAAQ;MAACK,KAAK;IAAA,GAAzCN,IAAI;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAsC,CACzD,CAAC,eACFV,OAAA,CAACP,KAAK;MACFY,IAAI,EAAC,GAAG;MACRC,OAAO,eAAEN,OAAA,CAACR,QAAQ;QAACoB,EAAE,EAAEf,WAAY;QAACgB,OAAO,EAAE;MAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAE;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEjB,CAAC;AAACI,EAAA,GAhBIb,MAAM;AAkBZ,eAAeA,MAAM;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}