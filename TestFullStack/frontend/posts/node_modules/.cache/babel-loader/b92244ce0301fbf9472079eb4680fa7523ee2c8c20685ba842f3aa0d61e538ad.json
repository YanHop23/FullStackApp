{"ast":null,"code":"var _jsxFileName = \"C:\\\\Oleg\\\\programing\\\\TestFullStack\\\\frontend\\\\posts\\\\src\\\\components\\\\Router.jsx\";\nimport React from 'react';\nimport { Route, Routes } from \"react-router-dom\";\nimport { authRoutes, publicRoutes } from \"../routes\";\nimport PostPage from \"../pages/PostPage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Router = () => {\n  const isAuth = true;\n  return /*#__PURE__*/_jsxDEV(Routes, {\n    children: [isAuth && authRoutes.map(({\n      path,\n      element\n    }) => /*#__PURE__*/_jsxDEV(Route, {\n      path: path,\n      element: element\n    }, path, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 17\n    }, this)), publicRoutes.map(({\n      path,\n      element\n    }) => /*#__PURE__*/_jsxDEV(Route, {\n      path: path,\n      element: element,\n      exact: true\n    }, path, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(Redirect, {\n      to: PostPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n};\n_c = Router;\nexport default Router;\nvar _c;\n$RefreshReg$(_c, \"Router\");","map":{"version":3,"names":["React","Route","Routes","authRoutes","publicRoutes","PostPage","jsxDEV","_jsxDEV","Router","isAuth","children","map","path","element","fileName","_jsxFileName","lineNumber","columnNumber","exact","Redirect","to","_c","$RefreshReg$"],"sources":["C:/Oleg/programing/TestFullStack/frontend/posts/src/components/Router.jsx"],"sourcesContent":["import React from 'react';\r\nimport {Route, Routes} from \"react-router-dom\";\r\nimport {authRoutes, publicRoutes} from \"../routes\";\r\nimport PostPage from \"../pages/PostPage\";\r\n\r\n\r\nconst Router = () => {\r\n    const isAuth = true\r\n    return (\r\n        <Routes>\r\n            {isAuth && authRoutes.map(({path, element}) => (\r\n                <Route key={path} path={path} element={element}/>\r\n            ))}\r\n            {publicRoutes.map(({path, element}) => (\r\n                <Route key={path} path={path} element={element} exact/>\r\n            ))}\r\n            <Redirect to={PostPage} />\r\n        </Routes>\r\n    );\r\n};\r\n\r\nexport default Router;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAQC,KAAK,EAAEC,MAAM,QAAO,kBAAkB;AAC9C,SAAQC,UAAU,EAAEC,YAAY,QAAO,WAAW;AAClD,OAAOC,QAAQ,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGzC,MAAMC,MAAM,GAAGA,CAAA,KAAM;EACjB,MAAMC,MAAM,GAAG,IAAI;EACnB,oBACIF,OAAA,CAACL,MAAM;IAAAQ,QAAA,GACFD,MAAM,IAAIN,UAAU,CAACQ,GAAG,CAAC,CAAC;MAACC,IAAI;MAAEC;IAAO,CAAC,kBACtCN,OAAA,CAACN,KAAK;MAAYW,IAAI,EAAEA,IAAK;MAACC,OAAO,EAAEA;IAAQ,GAAnCD,IAAI;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAgC,CACnD,CAAC,EACDb,YAAY,CAACO,GAAG,CAAC,CAAC;MAACC,IAAI;MAAEC;IAAO,CAAC,kBAC9BN,OAAA,CAACN,KAAK;MAAYW,IAAI,EAAEA,IAAK;MAACC,OAAO,EAAEA,OAAQ;MAACK,KAAK;IAAA,GAAzCN,IAAI;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAsC,CACzD,CAAC,eACFV,OAAA,CAACY,QAAQ;MAACC,EAAE,EAAEf;IAAS;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtB,CAAC;AAEjB,CAAC;AAACI,EAAA,GAbIb,MAAM;AAeZ,eAAeA,MAAM;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}